{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Students app",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of students app\n"
  },
  "servers": [
    {
      "url": "<http://localhost:3000>"
    },
    {
      "url": "<https://example.com/api/v1>"
    }
  ],
  "tags": [
    {
      "name": "Students",
      "description": "Operation about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/students/{id}": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get student by id",
        "operationId": "getStudent",
        "description": "Get student by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the student"
          }
        ],
        "responses": {
          "200": {
            "description": "Get student by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Succesfully found student with id 65ca67e7ae7f10c88b598384"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Students"
        ],
        "summary": "Patch student by id",
        "operationId": "patchStudent",
        "description": "Patch student by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the student"
          }
        ],
        "responses": {
          "200": {
            "description": "Get student by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Succesfully found student with id 65ca67e7ae7f10c88b598384"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/students": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create student",
        "operationId": "createStudent",
        "description": "Create a student with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "age",
                  "gender",
                  "avgMark",
                  "parentId"
                ],
                "properties": {
                  "name": {
                    "description": "Student's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "age": {
                    "description": "Student's age",
                    "type": "number",
                    "example": 12
                  },
                  "gender": {
                    "description": "Student's age",
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "other"
                    ]
                  },
                  "avgMark": {
                    "description": "Student's average mark. Should be between 1 and 12",
                    "type": "number",
                    "example": 9.7
                  },
                  "onDuty": {
                    "description": "Whether is student on duty",
                    "type": "boolean",
                    "example": false
                  },
                  "parentId": {
                    "description": "Student's parent id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "photo": {
                    "description": "Student's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a student",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a student!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get list of Students",
        "operationId": "getStudents",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "age"
            },
            "description": "All student's fields can be mentioned. Default value - _id"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "name": "minAvgMark",
            "in": "query",
            "schema": {
              "type": "number",
              "example": 4
            }
          },
          {
            "name": "maxAvgMark",
            "in": "query",
            "schema": {
              "type": "number",
              "example": 10
            }
          },
          {
            "name": "minAge",
            "in": "query",
            "schema": {
              "type": "number",
              "example": 10
            }
          },
          {
            "name": "maxAge",
            "in": "query",
            "schema": {
              "type": "number",
              "example": 16
            }
          },
          {
            "name": "gender",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "male",
                "female",
                "other"
              ],
              "example": "male"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found students!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found students!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/student"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "student": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "age",
          "gender",
          "avgMark",
          "onDuty"
        ],
        "properties": {
          "_id": {
            "description": "Student's id",
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "name": {
            "description": "Student's name",
            "type": "string",
            "example": "John Doe"
          },
          "age": {
            "description": "Student's age",
            "type": "number",
            "example": 18
          },
          "gender": {
            "description": "Student's age",
            "type": "string",
            "enum": [
              "male",
              "female",
              "other"
            ]
          },
          "avgMark": {
            "description": "Student's average mark. Should be between 1 and 12",
            "type": "number",
            "example": 9.7
          },
          "onDuty": {
            "description": "Whether is student on duty",
            "type": "boolean",
            "example": false
          },
          "parentId": {
            "description": "Student's parent id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "photo": {
            "description": "Link to student's photo",
            "type": "string",
            "example": "<https://res.cloudinary.com/uqwgdu/image/upload/image.png>"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}